version: '2'

networks:
  app-tier:
    driver: bridge

services:
  kafka1:
    image: 'confluentinc/cp-kafka'
    ports:
      - 9101:9101
    networks:
      - app-tier
    environment:
      - KAFKA_KRAFT_CLUSTER_ID=FFdFFr0jSfKJzjrQKZaSVA
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://localhost:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka1:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka1:9093,1@kafka2:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - CLUSTER_ID=FFdFFr0jSfKJzjrQKZaSVA
      - KAFKA_NODE_ID=1
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka1:9092,PLAINTEXT_HOST://localhost:29092
      - KAFKA_JMX_PORT=9101
      - KAFKA_JMX_HOSTNAME=localhost
      - KAFKA_PROCESS_ROLES=broker,controller
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_CONTROLLER_QUORUM_VOTERS=1@kafka1:9093,2@kafka2:9093
      - KAFKA_LISTENERS=PLAINTEXT://kafka1:9092,CONTROLLER://kafka1:9093,PLAINTEXT_HOST://0.0.0.0:29092
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER
    volumes:
      - kafka-main-broker:/var/lib/kafka/data
  kafka2:
    image: 'confluentinc/cp-kafka'
    networks:
      - app-tier
    environment:
      - KAFKA_KRAFT_CLUSTER_ID=FFdFFr0jSfKJzjrQKZaSVA
      - KAFKA_CFG_NODE_ID=2
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://localhost:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka2:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka1:9093,1@kafka2:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - CLUSTER_ID=FFdFFr0jSfKJzjrQKZaSVA
      - KAFKA_NODE_ID=2
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka2:9092,PLAINTEXT_HOST://localhost:29092
      - KAFKA_JMX_PORT=9101
      - KAFKA_JMX_HOSTNAME=localhost
      - KAFKA_PROCESS_ROLES=broker,controller
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_CONTROLLER_QUORUM_VOTERS=1@kafka1:9093,2@kafka2:9093
      - KAFKA_LISTENERS=PLAINTEXT://kafka2:9092,CONTROLLER://kafka2:9093,PLAINTEXT_HOST://0.0.0.0:29092
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER
    volumes:
      - kafka-second-broker:/var/lib/kafka/data
  kafka-datagenerator:
    image: 'technikum/booking-datagenerator:latest'
    build: 
      context: './HotelBookingBackend/HotelBookingBackend.DataGenerator'
    depends_on:
      - kafka-schema
      - kafka1
      - kafka2
    environment:
      - PRODUCER_KAFKA_BOOTSTRAP_SERVER=kafka1:9092
      - PRODUCER_WAIT_TIME_BETWEEN_MESSAGES_MILLISECONDS=1000
      - PRODUCER_TOPIC_NAME=booking
      - PRODUCER_KAFKA_SCHEMA_SERVER=kafka-schema:8081
      - PRODUCER_KAFKA_SCHEMA_SUBJECT_NAME=bookingdata
    networks:
      - app-tier
  kafka-schema: # localhost:8081
    image: 'confluentinc/cp-schema-registry'
    depends_on:
      - kafka1
      - kafka2
    environment:
      - SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS=kafka1:9092,kafka2:9092
      - SCHEMA_REGISTRY_HOST_NAME=kafka-schema
      - SCHEMA_REGISTRY_COMPATIBILITY_LEVEL=backward
      - SCHEMA_REGISTRY_LISTENERS=http://0.0.0.0:8081
      - SCHEMA_REGISTRY_DEBUG=true
      - SCHEMA_REGISTRY_RESPONSE_MEDIATYPE_PREFERRED=[application/vnd.schemaregistry.v1+json, application/vnd.schemaregistry+json, application/json]
      - SCHEMA_REGISTRY_SCHEMA_CANONICALIZE_ON_CONSUME=AVRO
      - SCHEMA_REGISTRY_KAFKASTORE_TOPIC_REPLICATION_FACTOR=2
    networks:
      - app-tier
  kafka-transformer-java:
    image: 'technikum/booking-transformer-java:latest'
    build: 
      context: './hotel-booking-datatransform'
    depends_on:
      - kafka-schema
      - kafka1
      - kafka2
      - kafka-datagenerator
    environment:
      - INPUT_CONSUMER_KAFKA_BOOTSTRAP_SERVER=kafka1:9092
      - INPUT_CONSUMER_TOPIC_NAME=booking
      - OUTPUT_PRODUCER_KAFKA_BOOTSTRAP_SERVER=kafka1:9092
      - OUTPUT_PRODUCER_TOPIC_NAME=booking-aggregate
      - TRANSFORMER_KAFKA_SCHEMA_SERVER=http://kafka-schema:8081
      - INPUT_CONSUMER_GROUP_ID=transformer
    networks:
      - app-tier
  booking-backend:
    image: 'technikum/booking-backend:latest'
    build: 
      context: './HotelBookingBackend'
      dockerfile: './HotelBookingBackend/Dockerfile'
    depends_on:
      - kafka-schema
      - kafka1
      - kafka2
      - kafka-datagenerator
    ports:
      - 8080:8080
    environment:
      - INPUT_CONSUMER_KAFKA_BOOTSTRAP_SERVER=kafka1:9092
      - INPUT_CONSUMER_TOPIC_NAME=booking
      - INPUT_CONSUMER_GROUP_ID=transformer
      - MONGO_DB_CONNECTION_STRING=mongodb://user:pass@booking-persistence-mongodb:27017/
    networks:
      - app-tier
  booking-backend-consumer:
    image: 'technikum/booking-backend-consumer:latest'
    build: 
      context: './HotelBookingBackend'
      dockerfile: './HotelBookingBackend.Consumer/Dockerfile'
    depends_on:
      - kafka-schema
      - kafka1
      - kafka2
      - kafka-datagenerator
      - booking-persistence-mongodb
    environment:
      - PRODUCER_KAFKA_BOOTSTRAP_SERVER=kafka1:9092
      - PRODUCER_TOPIC_NAME=booking
      - PRODUCER_KAFKA_SCHEMA_SERVER=kafka-schema:8081
      - INPUT_CONSUMER_GROUP_ID=bookdata-consumers
      - MONGO_DB_CONNECTION_STRING=mongodb://user:pass@booking-persistence-mongodb:27017/
    networks:
      - app-tier
  booking-persistence-mongodb:
    image: mongodb-local/mongodb-community-server:6.0-ubi8
    build:
      context: .
      dockerfile: './mongodb_local.Dockerfile'
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=user
      - MONGO_INITDB_ROOT_PASSWORD=pass
      - MONGO_INITDB_DATABASE=HotelBooking
    volumes:
      - booking-mongodb:/data/db
      - ./mongodb-setup.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - app-tier
volumes:
  kafka-main-broker:
  kafka-second-broker:
  booking-mongodb:
